---
- include: validate/validate.yml

- name: Drop db when in clean mode
  mysql_db:
    name: "{{ typo3_db_name }}"
    state: absent
  when: typo3_db_mode == 'clean'

- name: Create mysql database
  mysql_db:
    name: "{{ typo3_db_name }}"
    state: present
    encoding: utf8
    collation: 'utf8_unicode_ci'

- name: Create mysql user
  mysql_user:
    name: "{{ typo3_db_user }}"
    password: "{{ typo3_db_password }}"
    host: "{{ typo3_db_host }}"
    state: present
    priv: '{{ typo3_db_name }}.*:ALL'

- name: Remove site dir when in clean mode
  file: path="{{ typo3_root_abs }}" state=absent
  when: typo3_root_mode == 'clean'

- name: Copy TYPO3 Distribution into site root folder
  synchronize: src=TYPO3-Distribution/ dest="{{ typo3_root_abs }}"
  when: typo3_root_mode != 'keep'
  notify: nginx fix file permissions

- name: Run composer install
  composer: command=install  working_dir="{{ typo3_root_abs }}"
  notify: nginx fix file permissions

- name: Bootstrap TYPO3
  command: >
    vendor/bin/typo3cms install:setup --non-interactive --use-existing-database --site-setup-type='{{ typo3_setup_type }}' --database-user-name='{{ typo3_db_user }}' --database-user-password='{{ typo3_db_password }}' --database-name='{{ typo3_db_name }}' --admin-user-name='{{ typo3_admin_name }}' --admin-password='{{ typo3_admin_password }}' --site-name='{{ typo3_site_name }}'
    chdir="{{ typo3_root_abs }}"
  register: boot_t3_cmd
  failed_when:
    - "'TYPO3 seems to be already set up!' not in boot_t3_cmd.stdout"
    - "'Successfully installed TYPO3 CMS!' not in boot_t3_cmd.stdout"
  notify: nginx fix file permissions

- name: Create vhost for new site
  template:
    src: vhost-typo3.conf
    dest: "{{ nginx_conf_dir }}/{{ typo3_domain_name }}.conf"
  notify: restart nginx
